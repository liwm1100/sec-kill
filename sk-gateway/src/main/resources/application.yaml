server:
  port: 30010
spring:
  application:
    name: sk-gateway
  config:
    import: optional:nacos:sk-gateway.yaml
  cloud:
    nacos:
      server-addr: localhost:8848
      #username:
      #password:
      config:
        server-addr: ${spring.cloud.nacos.server-addr:}
        context-path: /nacos
        group: DEFAULT_GROUP
        file-extension: yaml
      discovery:
        server-addr: ${spring.cloud.nacos.server-addr:}
        group: DEFAULT_GROUP
    gateway:
      routes:
      - id: sk-user
        uri: lb://sk-user
        predicates:
        - Path=/user/**
      - id: sk-order
        uri: lb://sk-order
        predicates:
          - Path=/order/**
      - id: sk-auth
        uri: lb://sk-auth
        predicates:
          - Path=/auth/**
    #sentinel配置
    sentinel:
      datasource.ds2.file:
        file: "classpath: gateway.json"
        ruleType: gw-flow
      datasource.ds1.file:
        file: "classpath: api.json"
        ruleType: gw-api-group
      transport:
        dashboard: localhost:8080
      filter:
        enabled: true
      scg.fallback:
        mode: response
        response-status: 444
        response-body: 1234
      scg:
        order: -100


############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true

management.endpoints.web.exposure.include: "*"